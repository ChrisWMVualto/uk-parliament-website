@using Links
@model UKP.Website.Models.SearchViewModel


<div class="container main-container">
    <div class="row">

        <div class="col-md-12">
            <header class="title-main">
                <h2>
                    <i class="fa fa-search"></i> 
                    <span>Search</span>
                </h2>
                <a href="#" class="rss-link pull-right hidden-xs">RSS <i class="fa fa-rss fa-2x"></i></a>
            </header>
        </div>
        
        <div class="col-md-12">
            <button type="button" class="btn btn-default btn-go btn-lg btn-search-panel btn-block visible-xs" data-toggle="collapse" data-target="#searchPanel">
                Search now <i class="fa fa-plus"></i>
            </button>
        </div>

        <div id="searchPanel" class="collapse in">
            <div class="col-md-12 page-title-bar">
                <header>
                    <h3>Enter a Keyword & add tags to help if required:</h3>
                </header>
            </div>
            
            <form action="@Url.Action(MVC.Search.Index())" method="post">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group search-param">
                                <label for="keyword"><h4>1. Keywords</h4></label>
                                @Html.TextBoxFor(x => x.QueryModel.Keywords, new { @class = "form-control input-lg" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group search-param">
                                <label for="members"><h4>2. Members</h4></label>
                                <input type="text" class="form-control input-lg" id="members">
                                @Html.HiddenFor(x => x.QueryModel.MemberId, new { @class = "form-control input-lg" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group search-param">
                                <label for="tags"><h4>3. Tags</h4></label>
                                <input type="text" class="form-control input-lg" id="tags">
                                @Html.HiddenFor(x => x.QueryModel.House)
                                @Html.HiddenFor(x => x.QueryModel.Business)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div id="selectedTags">
                    </div>

                    <div>
                        <button type="submit" class="btn btn-default btn-go btn-lg">Search <i class="fa fa-arrow-right-thin fa-lg"></i></button>
                    </div>
                </div>
            </form>
        </div>

        <div class="col-md-12 page-filter-bar">
            <div class="row">
                <div class="col-md-10">
                    <h4>
                        @if (Model.SearchResults != null)
                        {
                            <strong>@Model.SearchResults.Count() Search Results for:</strong>
                        }
                        else
                        {
                            <strong>0 Search Results for:</strong>
                        }
                        
                        @Model.QueryModel.Keywords - 
                        
                        @if (Model.QueryModel.House != null)
                        {
                            foreach (var house in Model.QueryModel.House)
                            {
                                Html.Raw(string.Format("House: {0}, ", house));
                            }
                        }
                        
                        @if (Model.QueryModel.Business != null)
                        {
                            foreach (var business in Model.QueryModel.Business)
                            {
                                Html.Raw(string.Format("Business: {0}, ", business));
                            }
                        }
                    </h4>
                </div>
                <div class="col-md-2">
                    <select class="selectpicker select-filter form-control">
                        <option value="0">Last 30 days</option>
                        <option value="1">Last 10 days</option>
                    </select>
                </div>
            </div>
            <hr />
        </div>

        @Html.Partial(MVC.Search.Views._SearchEvent, Model)
    </div>
</div>

@section scripts {
    <script src="@Url.Content("~/Content/js/jquery.autocomplete.js")"></script>
    
    <script>
        $('#members').autocomplete({
            serviceUrl: "@Model.MemberAutocompleteUrl",
            displayItem: "DisplayAs",
            objectPath: "Members.Member",
            minChars: 3,
            // callback function:
            onSelect: function(member) {
                console.log(member['@@Member_Id']);
                $('#QueryModel_MemberId').val(member['@@Member_Id']);
            },
        });

        $('#tags')
            .autocomplete({
                serviceUrl: "http://local.ias.ukp/api/search/tags?tag=",
                delimiter: ', ',
                displayItem: "displayTag",
                objectPath: "",
                categoryItem: "category",
                minChars: 1,
            })
            .bind('input', TagInputParser);

        function TagAppender(tag, selector) {
            if (selector.val().length > 0)
                selector.val(selector.val() + ", " + tag);

            else
                selector.val(tag);
        }

        function TagDestroy() {
            var tag = $(this).text();
            tag = tag.replace(/(,)?(\s)?$/, '');

            var inputContent = $('#tags').val();
            var removeTagRegEx = new RegExp("(" + tag.replace(' ', '\\s') + "){1}(,)?(\\s)*");

            inputContent = inputContent.replace(removeTagRegEx, '');
            $('#tags').val(inputContent).trigger('input');

            $(this).remove();
        }

        function TagInputParser() {
            var inputValue = $(this).val();
            inputValue = inputValue.split(', ');
            inputValue.pop();
            var validTags = [];

            $.each(inputValue, function () {
                var tag = this.split(": ");
                
                if (tag[0] == "House")
                    TagAppender(tag[1], $('#QueryModel_House'));
                
                if (tag[0] == "Business")
                    TagAppender(tag[1], $('#QueryModel_Business'));

                if (tag[1] != null && tag[1] != "")
                    validTags.push(this);
            });

            $('#selectedTags').empty();
            $.each(validTags, function() {
                $('#selectedTags').append('<button type="button" class="btn btn-default btn-tag btn-lg">' + this + ' <i class="fa fa-close fa-lg"></i></button> ');
            });
            $('#selectedTags button').bind('click', TagDestroy);
        }
    </script>
}