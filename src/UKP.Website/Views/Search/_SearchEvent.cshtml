@using RestSharp.Extensions
@using UKP.Website.Application
@using UKP.Website.Models.Event
@model UKP.Website.Models.Search.SearchViewModel

@if(Model.SearchResult.Results.Any())
{
    foreach(var item in Model.SearchResult.Results)
    {
        var highlights = Model.SearchResult.SearchHighlights.FirstOrDefault(x => x.Id == item.Event.Id);

        <div class="col-md-12 search-item">
            <div class="row">
                <div class="col-lg-3 col-md-4 col-sm-5">
                    <a href="@Url.Action(MVC.Event.Index(item.Event.Id))" class="search-thumb-inner">
                        @if(item.ThumbnailUrl.HasValue())
                        {
                            <img src="@item.ThumbnailUrl" alt="@item.Event.Title" class="img-responsive">
                        }
                        else
                        {
                            <img src="@Url.Content("~/Content/img/filler-thumb-5.jpg")" alt="@item.Event.Title" class="img-responsive">
                        }
                        <div class="overlay">
                            <span class="overlay-stack fa-stack fa-lg"> <i class="fa fa-circle fa-stack-2x"></i> <i class="fa fa-play fa-stack-1x fa-inverse"></i> </span>
                            <strong>Play event from start</strong>
                        </div>
                    </a>
                </div>
                <div class="col-lg-9 col-md-8 col-sm-7">
                    <div class="search-text-inner">
                        <h5>
                            <i class="fa fa-circle hidden-lg"></i><strong>Start Time:</strong> @item.Event.DisplayStartDate.ToLocalTime().ToString(ApplicationConstants.YearDateTimeFormat, ApplicationConstants.DateTimeFormatter)
                        </h5>
                        <h5 class="date-divider">
                            <i class="fa fa-circle hidden-lg"></i>
                            @if(item.Event.DisplayStartDate.ToLocalTime().Date == item.Event.DisplayEndDate.ToLocalTime().Date)
                            {
                                <span><strong>End Time:</strong> @item.Event.DisplayEndDate.ToLocalTime().ToString("h.mmtt", ApplicationConstants.DateTimeFormatter)</span>
                            }
                            else
                            {
                                <span><strong>End Time:</strong> @item.Event.DisplayEndDate.ToLocalTime().ToString(ApplicationConstants.YearDateTimeFormat, ApplicationConstants.DateTimeFormatter)</span>
                            }
                        </h5>
                        <p><strong>@item.Event.Title</strong></p>
                        <div class="row">
                            @if(highlights != null)
                            {
                                if(highlights.KeywordMatches.Any())
                                {
                                    <div class="col-lg-1 col-md-2 col-sm-2">
                                        <strong>Matches: </strong>
                                    </div>
                                    <div class="col-lg-11 col-md-10 col-sm-10">

                                        @for(int i = 0; i < highlights.KeywordMatches.Count(); i++)
                                        {
                                            @highlights.KeywordMatches.ElementAt(i)if(i < highlights.KeywordMatches.Count() - 1)
                                                                                   {<text>, </text>}
                                        }
                                    </div>
                                }
                            }
                        </div>
                        <div class="row moments">
                            @Html.Partial(MVC.Search.Views._SearchMoment, new SearchMomentModel(item.Event.Id, item.LogMoments, 0))

                            @if(item.LogMoments.Results.Count() < item.LogMoments.Total)
                            {
                                <div class="col-md-12 moment-more">
                                    <button type="button" class="btn btn-default btn-show-more btn-lg pull-right" data-event-id="@item.Event.Id" data-item-skip="@item.LogMoments.Results.Count()" data-url-base="@Url.Action(MVC.Search.Moments(item.Event.Id, Model.KeywordsOrMember, Model.Member))">Show More <i class="fa fa-plus"></i></button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <hr />
        </div>
    }
}